openapi: 3.0.3
info:
  title: BonziTech-TCC API
  description: API do projeto de TCC do grupo BonziTech do 3º ano do Colégio Bento Quirino
  version: 0.0.1
externalDocs:
  description: Repositório do Github
  url: https://github.com/vidacalura/BonziTech-TCC
tags:
  - name: usuarios
paths:
  /api/usuarios:
    get:
      tags:
        - usuarios
      summary: Mostra todos os usuários cadastrados
      description: Mostra todos os usuários cadastrados
      operationId: getUsuarios
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
        '500':
          description: Erro ao retornar usuários
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  
    post:
      tags:
        - usuarios
      summary: Cria um novo usuário
      description: Cria um novo usuário
      operationId: createUsuario
      requestBody:
        description: Cria um novo usuário
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usuario'
        required: true
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
        '400':
          description: Parâmetros inválidos ou insuficientes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Erro ao efetuar INSERT no MySQL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /api/usuarios/:cod_usu:
    put:
      tags:
        - usuarios
      summary: Atualizar um usuário existente
      description: Atualiza um usuário existente por meio de seu id
      operationId: updateUsuario
      parameters:
        - name: cod_usu
          in: query
          description: Código do usuário
          required: true
          schema:
            type: string
            default: null
      requestBody:
        description: Atualiza um usuário existente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usuario'
        required: true
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
        '400':
          description: Parâmetros inválidos ou insuficientes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Erro ao efetuar UPDATE no MySQL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    get:
      tags:
        - usuarios
      summary: Mostra um usuários cadastrado
      description: Mostra um usuários por meio de seu cod_usu
      operationId: getUsuario
      parameters:
        - name: cod_usu
          in: query
          description: Código do usuário
          required: true
          schema:
            type: string
            default: null
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
        '400':
          
        '500':
          description: Erro ao retornar usuário
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  
    delete:
      tags:
        - usuarios
      summary: Deleta um usuário
      description: Deleta um usuário
      operationId: deleteUsuario
      parameters:
        - name: cod_usu
          in: query
          description: Código do usuário
          required: true
          schema:
            type: string
            default: null
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
        '400':
          description: Usuário inexistente ou permissões insuficientes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'    
        '500':
          description: Erro ao retornar usuários
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
                
components:
  schemas:
    message:
      type: object
      properties:
        message:
          type: string
          format: string
          example: "Mensagem de sucesso!"
    error:
      type: object
      properties:
        error:
          type: string
          format: string
          example: "Mensagem de erro."
    
    usuario:
      type: object
      properties:
        permissoes: 
          type: string
          format: string
          example: "Leitura"
        nome: 
          type: string
          format: string
          example: "Lucas"
        email: 
          type: string
          format: string
          example: "teste@teste.com"
        senha: 
          type: string
          format: string (criptografada)
          example: CvNWmufjpBqmAVNgAFf2U6KEvrPEY8g4hnMUpjLRjT3HBHCZYaSHE6xUPUJdWYMHDejgALzzaurpLsLcQSpan2sPjtMk8YVbahRUkwTUJDJQRmFUe2eMrgQcrjggBgPz